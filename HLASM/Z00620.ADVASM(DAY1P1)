//DAY1P1 JOB 'ADVENT OF CODE',
//       MSGCLASS=A,MSGLEVEL=(1,1),
//       NOTIFY=&SYSUID
//       SET INPUT=DAY1IN
//ASMCLG EXEC PROC=ASMHCLG
//SYSIN  DD *
         PRINT ON,NODATA,NOGEN
********************************************
*        REGISTER EQUATES                  *
********************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
********************************************
DAY1P1   CSECT
         STM   R14,R12,12(R13)
         BASR  R12,0                ESTABLISH...
         USING *,R12                ADDRESSABILITY
         ST    R13,SAVEAREA+4       BACKWARD CHAIN CALLER
         LA    R13,SAVEAREA         ADDRESS OF MY SAVE AREA

********************************************
*        MAIN PROGRAM LOGIC                *
********************************************
         OPEN  (FILEIN,INPUT)      OPEN INPUT FILE
         OPEN  (FILEOUT,OUTPUT)    OPEN OUTPUT FILE


MAINLOOP EQU   *
         GET   FILEIN,INREC         READ RECORD FROM FILEIN TO INREC
*                 CHECK IF INREC CONTAINS A NUMBER
         CLI   INREC,C' '
         BE    ADDTOTAL     IF NO NUMBER, CHECK IF TOTAL > MAXTOTAL
         BNE   CHECKLEN     IF NUM, CHECK LENGTH OF NUMBER


*                 CHECK IF TOTAL IS > MAXTOTAL AND CHANGE MAXTOTAL
*                    AND CLEAR TOTAL TO 0
ADDTOTAL EQU   *
         CP    TOTAL,MAXTOTAL       CHECK IF TOTAL IS > MAXTOTAL
         BH    SWAPMAX              IF > THEN MAXTOTAL TO = TOTAL
         SP    TOTAL,TOTAL          CLEAR TOTAL OR NEXT SET OF NUMS
         B     MAINLOOP             READ NEXT RECORD


SWAPMAX  EQU   *
         ZAP   MAXTOTAL,TOTAL
         SP    TOTAL,TOTAL          CLEAR TOTAL FOR NEXT SET OF NUMS
         B     MAINLOOP


CHECKLEN EQU   *
*                 CHECK FOR SPACE IN 5TH BYTE TO FIND LEN OF INPUT
         CLI   INREC+4,C' '        CHECK FOR SPACE IN 5TH BYTE
         BE    LENFOUR              IF SPACE, LEN IS 4
         BNE   LENFIVE              IF NO SPACE, LEN IS 5


*                 ADD INPUTNUM TO TOTAL
LENFOUR  EQU   *
         PACK  INPUTNUM,INREC(4)    PACK INREC INTO INPUTNUM W/ LEN 4
         AP    TOTAL,INPUTNUM       ADD INPUTNUM TO TOTAL
         B     MAINLOOP             READ NEXT RECORD


LENFIVE  EQU   *
         PACK  INPUTNUM,INREC(5)    PACK INREC INTO INPUTNUM W/ LEN 5
         AP    TOTAL,INPUTNUM       ADD INPUTNUM TO TOTAL
         B     MAINLOOP             READ NEXT RECORD


EOF      EQU   *
         MVC   EDOUT,EDWD           MOVE EDIT WORD TO OUTPUT BUFFER
         ED    EDOUT,MAXTOTAL       EDIT MAXTOTAL TO OUTPUT BUFFER
         MVC   OUTREC,=CL80' '      MOVE BLANKS TO OUTRED
         MVC   OUTREC(L'EDOUT),EDOUT MOVE EDITED OUTPUT TO OUTREC
         PUT   FILEOUT,OUTREC       WRITE OUTREC TO FILEOUT


         CLOSE (FILEIN)             CLOSE INPUT FILE
         CLOSE (FILEOUT)            CLOSE OUTPUT FILE

********************************************
         L     R13,SAVEAREA+4       POINT AT OLD SAVE AREA
         LM    R14,R12,12(R13)      RESTORE THE REGISTERS
         LA    R15,0                RETURN CODE = 0
         BR    R14                  RETURN TO THE OPERATING SYSTEM

********************************************
*        SYMBOL DECLARATIONS               *
********************************************
INPUTNUM DC    PL5'0'
TOTAL    DC    PL5'0'
MAXTOTAL DC    PL5'0'
EDWD     DC    X'202020202020202020'
EDOUT    DS    XL9



********************************************
*        INPUT FILE - DATA CONTROL BLOCK   *
********************************************
FILEIN   DCB   DDNAME=FILEIN,                                          X
               MACRF=(GM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOF

********************************************
*        INPUT RECORD AREA                 *
********************************************
INREC    DS    CL80

********************************************
*        OUTPUT FILE - DATA CONTROL BLOCK  *
********************************************
FILEOUT  DCB   DDNAME=FILEOUT,                                         X
               MACRF=(PM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80

********************************************
*        OUTPUT RECORD AREA                *
********************************************
OUTREC   DS    CL80

********************************************
*        REGISTER SAVE AREA                *
********************************************
SAVEAREA DS    18F

********************************************
*        LITERAL POOL                      *
********************************************
         LTORG *

********************************************
*        END OF PROGRAM                    *
********************************************
         END   DAY1P1
/*
//G.SYSUDUMP DD SYSOUT=*
//G.FILEIN     DD DSN=Z00620.ADVINPUT.Y22(&INPUT),DISP=SHR
//G.FILEOUT    DD DSN=Z00620.ADVASM(OUTPUT),DISP=SHR
