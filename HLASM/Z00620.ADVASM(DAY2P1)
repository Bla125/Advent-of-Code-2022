//DAY2P1 JOB 'ADVENT OF CODE',
//       MSGCLASS=A,MSGLEVEL=(1,1),
//       NOTIFY=&SYSUID
//       SET INPUT=DAY2IN
//ASMCLG EXEC PROC=ASMHCLG
//SYSIN  DD *
         PRINT ON,NODATA,NOGEN
********************************************
*        REGISTER EQUATES                  *
********************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
********************************************
DAY2P1   CSECT
         STM   R14,R12,12(R13)
         BASR  R12,0                ESTABLISH...
         USING *,R12                ADDRESSABILITY
         ST    R13,SAVEAREA+4       BACKWARD CHAIN CALLER
         LA    R13,SAVEAREA         ADDRESS OF MY SAVE AREA

********************************************
*        MAIN PROGRAM LOGIC                *
********************************************
         OPEN  (FILEIN,INPUT)       OPEN INPUT FILE
         OPEN  (FILEOUT,OUTPUT)     OPEN OUTPUT FILE

* elf key
* a = rock
* b = paper
* c = scissors

* my key
* x = rock
* y = paper
* z = scissors

* x = 1
* y = 2
* z = 3

* lost = 0
* draw = 3
* win = 6

MAINLOOP EQU   *
         GET   FILEIN,INREC         READ RECORD FROM INPUT FILE
         CLI   INREC,C'A'           CHECK IF FIRST LETTER IS A
         BE    ELF_A                CHECK OUTCOMES WHEN ELF PICKED A
         CLI   INREC,C'B'           IF NOT, CHECK IF ELF PICKED B
         BE    ELF_B                CHECK OUTCOMES FOR B
         B     ELF_C                OTHERWISE, CHECK OUTCOMES FOR C

ELF_A    EQU   *
         CLI   INREC+2,C'X'         CHECK FOR X IN 3RD BYTE
         BE    A_X         
         CLI   INREC+2,C'Y'         CHECK FOR Y IN 3RD BYTE
         BE    A_Y
         CLI   INREC+2,C'Z'         CHECK FOR Z IN 3RD BYTE
         BE    A_Z

A_X      EQU   *
         AP    SCORE,=P'4'
         B     MAINLOOP
A_Y      EQU   *
         AP    SCORE,=P'8'
         B     MAINLOOP
A_Z      EQU   *
         AP    SCORE,=P'3'
         B     MAINLOOP




ELF_B    EQU   *
         CLI   INREC+2,C'X'         CHECK FOR X IN 3RD BYTE
         BE    B_X       
         CLI   INREC+2,C'Y'         CHECK FOR Y IN 3RD BYTE
         BE    B_Y
         CLI   INREC+2,C'Z'         CHECK FOR Z IN 3RD BYTE
         BE    B_Z

B_X      EQU   *
         AP    SCORE,=P'1'
         B     MAINLOOP
B_Y      EQU   *
         AP    SCORE,=P'5'
         B     MAINLOOP
B_Z      EQU   *
         AP    SCORE,=P'9'
         B     MAINLOOP



ELF_C    EQU   *
         CLI   INREC+2,C'X'         CHECK FOR X IN 3RD BYTE
         BE    C_X        
         CLI   INREC+2,C'Y'         CHECK FOR Y IN 3RD BYTE
         BE    C_Y
         CLI   INREC+2,C'Z'         CHECK FOR Z IN 3RD BYTE
         BE    C_Z

C_X      EQU   *
         AP    SCORE,=P'7'
         B     MAINLOOP
C_Y      EQU   *
         AP    SCORE,=P'2'
         B     MAINLOOP
C_Z      EQU   *
         AP    SCORE,=P'6'
         B     MAINLOOP




EOF      EQU   *
         MVC   EDOUT,EDWD           MOVE EDIT WORD INTO OUTPUT BUFFER
         ED    EDOUT,SCORE          EDIT SCORE INTO OUTPUT BUFFER
         MVC   OUTREC,=CL80' '      MOVE BLANKS INTO OUTREC
         MVC   OUTREC(L'EDOUT),EDOUT MOVE EDITED OUTPUT INTO OUTREC
         PUT   FILEOUT,OUTREC       WRITE OUTREC TO OUTPUT FILE
         

         CLOSE (FILEIN)             CLOSE INPUT FILE
         CLOSE (FILEOUT)            CLOSE OUTPUT FILE

********************************************
         L     R13,SAVEAREA+4       POINT TO OLD SAVE AREA
         LM    R14,R12,12(R13)      RESTORE REGISTERS
         LA    R15,0                RETURN CODE = 0
         BR    R14                  RETURN TO THE OPERATING SYSTEM

********************************************
*        SYMBOL DECLARATIONS               *
********************************************
SCORE    DC    PL4'0'
EDWD     DC    X'20202020202020'
EDOUT    DS    XL7


********************************************
*        INPUT FILE - DATA CONTROL BLOCK   *
********************************************
FILEIN   DCB   DDNAME=FILEIN,                                          X
               MACRF=(GM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80,                                               X
               EODAD=EOF

********************************************
*        INPUT RECORD AREA                 *
********************************************
INREC    DS    CL80

********************************************
*        OUTPUT FILE - DATA CONTROL BLOCK  *
********************************************
FILEOUT  DCB   DDNAME=FILEOUT,                                         X
               MACRF=(PM),                                             X
               DSORG=PS,                                               X
               RECFM=FB,                                               X
               LRECL=80

********************************************
*        OUTPUT RECORD AREA                *
********************************************
OUTREC   DS    CL80


********************************************
*        REGISTER SAVE AREA                *
********************************************
SAVEAREA DS    18F

********************************************
*        LITERAL POOL                      *
********************************************
         LTORG *

********************************************
*        END OF PROGRAM                    *
********************************************
         END   DAY2P1
/*
//G.SYSUDUMP   DD SYSOUT=*
//G.FILEIN     DD DSN=Z00620.ADVINPUT.Y22(&INPUT),DISP=SHR
//G.FILEOUT    DD DSN=Z00620.ADVASM(OUTPUT),DISP=SHR